<%ARGS>

	$object	=> undef
	$SETS	=> undef

</%ARGS>
<%INIT>

    use Contenido::File;
    use vars qw($keeper $request );

    $request->{local_codepage} = 'UTF8';
    $request->{local_codepage} = 'WIN'	if Convert::Cyrillic::cstocs('WIN', 'UTF8', $SETS->{control_charset}) eq 'Контроль';
    $request->{local_codepage} = 'KOI8'	if Convert::Cyrillic::cstocs('KOI8', 'UTF8', $SETS->{control_charset}) eq 'Контроль';

    warn "Contenido Debug: Форма для редактирования пришла в кодировке ".$request->{local_codepage}."\n"        if ($state->debug());

    my @properties = $object->structure();
    for (0..$#properties)
    {
	my $prop = $properties[$_];
	my $name = $prop->{attr};
	my $type = $prop->{type};

	next	if ($name eq 'sections');
	next	if ($name eq 'id');

	if ($m->comp_exists("/contenido/components/outputs/$type.msn")) {
		$object->{$name} = $m->comp("/contenido/components/outputs/$type.msn", SETS => $SETS, name => $name, object => $object );

	} elsif ( $prop->{type} eq 'image' ) {
            # --------------------------------------------------------------------------------------
            # Добавление одной, отдельно стоящей картинки...

            if ($SETS->{'_delete_image.'.$name} == 1)
            {
		my $IMAGE = $object->get_image( $name );
		$object->_delete_image( $IMAGE );
		$object->$name('');
            } else {
                my $IMAGE = $object->get_image( $name );
		$IMAGE = ref $IMAGE ? $IMAGE : {};
		$IMAGE = $m->comp('/contenido/components/set_image.msn', default=>$IMAGE, field=>$name, SETS=>$SETS, object=>$object, prop => $prop);
		if ( exists $IMAGE->{filename} ) {
			$object->$name( $IMAGE );
                }
            }

	} elsif ($prop->{type} =~ /^images/) {
            # --------------------------------------------------------------------------------------
            # А вот это уже сложнее - составление блока из всех картинок...

            my $IMAGES = $object->get_image( $name );
	    if (ref($IMAGES) ne 'HASH') {
		$IMAGES = {};
		$IMAGES->{maxnumber} = 0;
	    };

            # Теперь надо просмотреть все аргументы - а вдруг это то, что нам нужно...
            foreach my $arg (keys(%{ $SETS }))
            {
		# Разбиваем все на части, отделяем...
		my ($partname,undef) = split(/\./,$arg);
		$partname =~ /^(.+)_(\d+)$/;
		my ($localname,$number) = ($1, $2);
		if ( ($localname eq $prop->{attr}) && ($number > 0) && ( $arg eq $localname.'_'.$number )) {
                    # Ура! Нашли элемент!

                    my $partname = $localname.'_'.$number;

                    if ($SETS->{'_delete_image.'.$partname} == 1) {
			$object->_delete_image( $IMAGES->{'image_'.$number} );
			delete $IMAGES->{'image_'.$number};
		    } else {
			my $IMAGE = undef;
			if (exists($IMAGES->{'image_'.$number})) {
				$IMAGE = $IMAGES->{'image_'.$number};
			};
                        $IMAGE = $m->comp('/contenido/components/set_image.msn', default=>$IMAGE, field=>$partname, SETS=>$SETS, object=>$object, prop => $prop);
			if (exists($IMAGE->{filename})) {
				$IMAGE->{number} = $number;
				$IMAGES->{'image_'.$number} = $IMAGE;
				$IMAGES->{maxnumber} = $number		if ($number > $IMAGES->{maxnumber});
			}
		    }
		}
	    }

	    if ( scalar(keys(%{ $IMAGES })) > 0) {
		my $maxnumber = 0;
		for ( 1..100 ) {
			$maxnumber = $_		if exists $IMAGES->{"image_$_"} && $_ > $maxnumber;
		}
		$IMAGES->{maxnumber} = $maxnumber;
		$object->$name( $IMAGES );
	    }

	} elsif ( $prop->{type} eq 'multimedia' ) {
            # --------------------------------------------------------------------------------------
            # Добавление одного объект Мультимедиа

            if ($SETS->{'_delete_multi.'.$name} == 1)
            {
		my $BINARY = $object->get_image( $name );
		$object->_delete_binary( $BINARY );
		$object->$name('');
            } else {
                my $MULTI = undef;
                if (length($object->{ $name }) > 8)
                {
                    $MULTI = eval ('my '.$object->{ $name });
                    if (ref($MULTI) ne 'HASH') {  $MULTI = {} };
                }
                $MULTI = $m->comp('/contenido/components/set_multi.msn', default=>$MULTI, field=>$name, SETS=>$SETS, object=>$object);
                if (exists($MULTI->{filename}))
                {
                    $object->$name ( $MULTI );
                }
            }

	} elsif ( $prop->{type} eq 'multimedia_new' ) {
            # --------------------------------------------------------------------------------------
            # Добавление одного объект Мультимедиа

            if ($SETS->{'_delete_multi.'.$name} == 1)
            {
		my $BINARY = $object->get_image( $name );
		$object->_delete_binary( $BINARY );
		$object->$name('');
            } else {
                my $MULTI = $object->get_image( $name );
		$MULTI = ref $MULTI ? $MULTI : {};
                $MULTI = $m->comp('/contenido/components/set_multimedia_new.msn', default=>$MULTI, field=>$name, SETS=>$SETS, object=>$object, prop => $prop);
                if (exists($MULTI->{filename}))
                {
                    $object->$name( $MULTI );
                }
            }

	} elsif ($prop->{type} eq 'multimedia_multi') {
            # --------------------------------------------------------------------------------------
            # А вот это уже сложнее - составление блока из всех файлов...

            my $FILES = $object->get_image( $name );
	    if ( ref($FILES) ne 'HASH' ) {
		$FILES = {};
		$FILES->{maxnumber} = 0;
	    };

            # Теперь надо просмотреть все аргументы - а вдруг это то, что нам нужно...
            foreach my $arg (keys(%{ $SETS }))
            {
		# Разбиваем все на части, отделяем...
		my ($partname,undef) = split(/\./,$arg);
		$partname =~ /^(.+)_(\d+)$/;
		my ($localname,$number) = ($1, $2);
		if ( ($localname eq $prop->{attr}) && ($number > 0) && ( $arg eq $localname.'_'.$number )) {
                    # Ура! Нашли элемент!

                    my $partname = $localname.'_'.$number;

                    if ($SETS->{'_delete_multi.'.$partname} == 1) {
			$object->_delete_binary( $FILES->{'file_'.$number} );
			delete $FILES->{'file_'.$number};
		    } else {
			my $MULTI = undef;
			if (exists($FILES->{'file_'.$number})) {
				$MULTI = $FILES->{'file_'.$number};
			};
			$MULTI = $m->comp('/contenido/components/set_multimedia_new.msn', default=>$MULTI, field=>$partname, SETS=>$SETS, object=>$object, prop => $prop);
			if (exists($MULTI->{filename})) {
				$MULTI->{number} = $number;
				$FILES->{'file_'.$number} = $MULTI;
				$FILES->{maxnumber} = $number		if ($number > $FILES->{maxnumber});
			}
		    }
		}
	    }

	    if ( scalar(keys(%{ $FILES })) > 0) {
		my $maxnumber = 0;
		for ( 1..100 ) {
			$maxnumber = $_		if exists $FILES->{"file_$_"} && $_ > $maxnumber;
		}
		$FILES->{maxnumber} = $maxnumber;
		$object->$name( $FILES );
	    }

	} elsif ( $prop->{type} eq 'audio' ) {
            # --------------------------------------------------------------------------------------
            # Добавление одного объект Мультимедиа

            if ($SETS->{'_delete_multi.'.$name} == 1)
            {
                my $VAR1 = undef;
                eval "\$object->{$name}";
                my $BINARY = $VAR1;
                if (ref $BINARY) {$BINARY->remove}
                $object->{$name} = '';
            } else {
                my $MULTI = undef;
                if (length($object->$name) > 8)
                {
                    my $VAR1 = undef;
                    eval "\$object->{$name}";
                    $MULTI = $VAR1;
                    unless (ref $MULTI) {$MULTI = undef};
                }
                $MULTI = $m->comp('/contenido/components/set_audio.msn', default=>$MULTI, field=>$name, SETS=>$SETS, object=>$object, prop => $prop);
                if (exists($MULTI->{filename}))
                {
                    $object->$name( $MULTI );
                }
            }

	} else {
		$object->{$name} = $m->comp('/contenido/components/filter.msn', str => $SETS->{$name} );
        }

    }

    # По идее - мы работаем с ссылкой, так что ничего не надо возвращать!    
    # O-ле! О-ле! О-ле!
    return 1;

</%INIT>
